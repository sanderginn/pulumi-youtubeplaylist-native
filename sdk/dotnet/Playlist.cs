// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.YoutubeplaylistNative
{
    [YoutubeplaylistNativeResourceType("youtubeplaylist-native:index:Playlist")]
    public partial class Playlist : global::Pulumi.CustomResource
    {
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("itemIds")]
        public Output<ImmutableArray<string>> ItemIds { get; private set; } = null!;

        [Output("playlistId")]
        public Output<string?> PlaylistId { get; private set; } = null!;

        [Output("title")]
        public Output<string?> Title { get; private set; } = null!;


        /// <summary>
        /// Create a Playlist resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Playlist(string name, PlaylistArgs args, CustomResourceOptions? options = null)
            : base("youtubeplaylist-native:index:Playlist", name, args ?? new PlaylistArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Playlist(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("youtubeplaylist-native:index:Playlist", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Playlist resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Playlist Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Playlist(name, id, options);
        }
    }

    public sealed class PlaylistArgs : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("itemIds", required: true)]
        private InputList<string>? _itemIds;
        public InputList<string> ItemIds
        {
            get => _itemIds ?? (_itemIds = new InputList<string>());
            set => _itemIds = value;
        }

        [Input("playlistId")]
        public Input<string>? PlaylistId { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        public PlaylistArgs()
        {
        }
        public static new PlaylistArgs Empty => new PlaylistArgs();
    }
}
